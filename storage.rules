rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // ========================================
    // HELPER FUNCTIONS
    // ========================================

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
             firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isStaff() {
      return isAuthenticated() &&
             firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager', 'employee', 'technician', 'front_desk'];
    }

    // ========================================
    // PUBLIC IMAGE ACCESS
    // ========================================

    // Allow public read access for optimized images (products, motorcycles, etc.)
    match /products/{allPaths=**} {
      allow read: if true; // Public read for product images
      allow write: if isStaff(); // Only staff can upload
      allow delete: if isAdmin(); // Only admins can delete
    }

    match /motorcycles/{allPaths=**} {
      allow read: if true; // Public read for motorcycle images
      allow write: if isStaff(); // Only staff can upload
      allow delete: if isAdmin(); // Only admins can delete
    }

    match /user-uploads/{allPaths=**} {
      allow read: if isAuthenticated() && request.auth.uid == resource.metadata['userId'];
      allow write: if isAuthenticated() && request.auth.uid == request.resource.metadata['userId'];
      allow delete: if isAuthenticated() && request.auth.uid == resource.metadata['userId'];
    }

    // ========================================
    // DOCUMENT UPLOADS (SOAT, Tecnomecanica, etc.)
    // ========================================

    match /documents/{allPaths=**} {
      allow read: if isAuthenticated(); // Authenticated users can read documents
      allow write: if isStaff(); // Only staff can upload documents
      allow delete: if isAdmin(); // Only admins can delete
    }

    // ========================================
    // TEMPORARY UPLOADS (for processing)
    // ========================================

    match /temp/{allPaths=**} {
      allow read, write: if isAuthenticated();
      allow delete: if isAuthenticated() || request.time < resource.timeCreated + duration.value(1, 'h'); // Auto-delete after 1 hour
    }

    // ========================================
    // BACKUP FILES
    // ========================================

    match /backups/{allPaths=**} {
      allow read: if isAdmin();
      allow write: if isAdmin();
      allow delete: if isAdmin();
    }

    // ========================================
    // DEFAULT DENY
    // ========================================

    // Deny all other access by default
    match /{allPaths=**} {
      allow read, write, delete: if false;
    }
  }
}